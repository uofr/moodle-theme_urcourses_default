define("theme_urcourses_default/fuzzysearch",["exports"],(function(_exports){function _slicedToArray(arr,i){return function(arr){if(Array.isArray(arr))return arr}(arr)||function(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function(){};return{s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function(){it=it.call(o)},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e3){didErr=!0,err=_e3},f:function(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;var _dictionary={},_gramMap={},_originals={},addWord=function(word){var gramSize=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,wordLower=word.toLowerCase(),grams=getGrams(word,gramSize),wordNormal=getVectorNormal(grams);_originals[wordLower]=word,_dictionary[gramSize]?_dictionary[gramSize].push([wordNormal,wordLower]):_dictionary[gramSize]=[[wordNormal,wordLower]];var wordIndex=_dictionary[gramSize].length-1;for(var gram in grams){var gramCount=grams[gram];gram in _gramMap?_gramMap[gram].push([wordIndex,gramCount]):_gramMap[gram]=[[wordIndex,gramCount]]}},lookup=function(word,gramSize){var grams=getGrams(word,gramSize),wordNormal=getVectorNormal(grams),matches={},dict=_dictionary[gramSize],results=[];for(var gram in grams){var gramCount=grams[gram];if(gram in _gramMap){var _step,_iterator=_createForOfIteratorHelper(_gramMap[gram]);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),index=_step$value[0],count=_step$value[1];index in matches?matches[index]+=gramCount*count:matches[index]=gramCount*count}}catch(err){_iterator.e(err)}finally{_iterator.f()}}}if(!matches)return null;for(var matchIndex in matches){var dotProduct=matches[matchIndex],_dict$matchIndex=_slicedToArray(dict[matchIndex],2),matchNormal=_dict$matchIndex[0],matchingWord=_dict$matchIndex[1],cosineSimilarity=dotProduct/(wordNormal*matchNormal);results.push([cosineSimilarity,matchingWord])}return results.sort((function(a,b){return b[0]-a[0]})).filter((function(match){return match[0]>=0}))},getVectorNormal=function(grams){var sumOfSquareOfGramCounts=0;for(var gram in grams){var gramCount=grams[gram];sumOfSquareOfGramCounts+=Math.pow(gramCount,2)}return Math.sqrt(sumOfSquareOfGramCounts)},getGrams=function(string){for(var gramSize=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,gramMap={},stringConverted=convertString(string,gramSize),i=0;i<stringConverted.length-gramSize+1;i++){var gram=stringConverted.slice(i,i+gramSize);gram in gramMap?gramMap[gram]+=1:gramMap[gram]=1}return gramMap},convertString=function(string){var gramSize=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,nonWordRegex=/[^a-zA-Z0-9\u00C0-\u00FF, ]+/g,newString="-"+string.toLowerCase().replace(nonWordRegex,"")+"-";if(newString.length<gramSize){var lengthDifference=gramSize-string.length;return newString.padEnd(newString.length+lengthDifference,"-")}return newString},_default={setDictionary:function(dictionary){_dictionary&&(_dictionary={},_gramMap={},_originals={}),dictionary.forEach((function(word){for(var gramSize=2;gramSize<4;gramSize++)addWord(word,gramSize)}))},search:function(word){for(var gramSize=3;gramSize>=2;gramSize--){var results=lookup(word,gramSize);if(results)return results.map((function(result){return _originals[result[1]]}))}return null}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=fuzzysearch.min.js.map