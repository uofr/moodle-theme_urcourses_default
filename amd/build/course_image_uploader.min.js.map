{"version":3,"file":"course_image_uploader.min.js","sources":["../src/course_image_uploader.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Campus - Code for course header image uploader.\n *\n * @package    theme_urcourses_default\n * @author     John Lane\n *\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str', 'core/modal_factory',\n    'core/modal_events'], function($, ajax, notification, str, ModalFactory, ModalEvents) {\n\n    /** Container jquery object. */\n    var _root;\n    /** Maximum file size. */\n    var _maxbytes;\n    /** Course ID */\n    var _courseid;\n    /** Image data for course image to be uploaded. */\n    var _imagedata;\n    /** Name of image. */\n    var _imagename;\n\n    /** Jquery selector strings. */\n    var SELECTORS = {\n        UPLOADER: '#course_image_uploader',\n        HEADER: '#page-header .header-body',\n        HEADER_TOP: '#page-header .page-head',\n        SQUARE_IMG: '#hdr_chooser_a_div',\n        STYLE_HDR: '#header_a_head',\n        UPLOAD_BTN: '#upload_img_confirm',\n        CANCEL_BTN: '#upload_img_cancel',\n    };\n\n    /**\n     * Initializes global variables.\n     * @param {string} root - Jquery selector for container.\n     * @param {int} maxbytes - Maximum allowed file size.\n     * @param {int} courseid - ID of current course.\n     * @return void\n     */\n    var _setGlobals = function(root, maxbytes, courseid) {\n       _root = $(root);\n       _maxbytes = maxbytes;\n       _courseid = courseid;\n    };\n\n    /**\n     * Initializes _imagedata.\n     * @param {string} imagedata\n     */\n    var _setImageData = function(imagedata) {\n        _imagedata = imagedata;\n    };\n\n    /**\n     * Initializes _imagename.\n     * @param {string} imagename\n     */\n    var _setImageName = function(imagename) {\n        _imagename = imagename;\n    };\n\n    /**\n     * Sets up event listeners.\n     * @return void\n     */\n    var _registerEventListeners = function() {\n        _root.on('change', SELECTORS.UPLOADER, _handleImageChange);\n        _root.on('click', SELECTORS.UPLOAD_BTN, _uploadImage);\n        _root.on('click', SELECTORS.CANCEL_BTN, _cancelUpload);\n    };\n\n    var _handleImageModal = function() {\n        //adding in confirmation modal in case buttons accidentally clicked\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: 'Change Course Image',\n            body: 'Some body content here'\n        })\n        .then(function(modal) {\n            modal.setSaveButtonText('Change');\n            var root = modal.getRoot();\n            root.on(ModalEvents.cancel, function(){\n                return;\n            });\n            root.on(ModalEvents.save, _handleImageChange);\n            modal.show();\n        });\n    };\n\n    /**\n     * Sets course image to uploaded file.\n     * Mostly lifted from theme_snap.\n     * @param {Object} event\n     * @return void\n     */\n    var _handleImageChange = function(event) {\n\n        // if no file was uploaded, return\n        if (!event.target.files.length) {\n            return;\n        }\n\n        // get the file\n        var file = event.target.files[0];\n\n        // if file was not an image, return\n        if (!file.type.match('image.*')) {\n            str.get_string('error:courseimageinvalidfiletype', 'theme_urcourses_default')\n                .done(_createErrorPopup);\n\n            return;\n        }\n\n        // if the file is too big, return\n        if (file.size > _maxbytes) {\n            str.get_string('error:courseimageexceedsmaxbytes', 'theme_urcourses_default', _humanFileSize(_maxbytes))\n                .done(_createErrorPopup);\n\n            return;\n        }\n\n        // set _imagename\n        _setImageName(file.name);\n\n        var reader = new FileReader();\n        reader.onload = _confirmImageUpload;\n        reader.readAsDataURL(file);\n    };\n\n    /**\n     * Prompts user to confirm image upload.\n     * @param {Object} event\n     */\n    var _confirmImageUpload = function(file) {\n        var imagedata = file.target.result;\n\n        var styleselect = ($(SELECTORS.STYLE_HDR).length>0) ? SELECTORS.SQUARE_IMG : SELECTORS.HEADER;\n\n        // store original image in DOM node\n        $(styleselect).data('original_img', $(styleselect).css('background-image'));\n\n        // set background image to temp file\n        $(SELECTORS.SQUARE_IMG).css({'background-image': 'url(' + imagedata + ')'});\n        $(SELECTORS.HEADER).css({'background-image': 'url(' + imagedata + ')'});\n\n        // show confirm/cancel buttons\n        _root.addClass('confirm');\n\n        // init _imagedata\n        imagedata = imagedata.split('base64,')[1];\n        _setImageData(imagedata);\n    };\n\n    /**\n     * Initiate ajax call to upload and set new image.\n     */\n    var _uploadImage = function() {\n        // return if required values aren't set\n        if (!_imagedata || !_imagename || !_courseid) {\n            return;\n        }\n\n        // set args\n        var args = {\n            courseid: _courseid,\n            imagedata: _imagedata,\n            imagename: _imagename,\n        };\n\n        // set ajax call\n        var ajaxCall = {\n            methodname: 'theme_urcourses_default_upload_course_image',\n            args: args,\n            done: _uploadDone,\n            fail: notification.exception\n        };\n\n        // initiate ajax call\n        ajax.call([ajaxCall]);\n    };\n\n    /**\n     * Handles theme_urcourses_default_upload_course_image response data.\n     * @param {Object} response\n     */\n    var _uploadDone = function() {\n        // unset image data\n        _setImageData('');\n        _setImageName('');\n\n        // remove confirm/cancel buttons\n        _root.removeClass('confirm');\n\n        // unset course original image data\n        $(SELECTORS.HEADER).data('original_image', '');\n\n        // clear file input\n        $(SELECTORS.UPLOADER).val('');\n\n        str.get_string('success:courseimageuploaded', 'theme_urcourses_default')\n            .done(_createSuccessPopup);\n    };\n\n    /**\n     * Unsets _imagedata, resets course header image, removes confirm/cancel buttons.\n     */\n    var _cancelUpload = function() {\n        // unset image data\n        _setImageData('');\n        _setImageName('');\n\n        // reset header image\n        var original_img = $(SELECTORS.HEADER).data('original_img');\n        $(SELECTORS.SQUARE_IMG).css({'background-image': original_img});\n        $(SELECTORS.HEADER).css({'background-image': original_img});\n\n        // clear file input\n        $(SELECTORS.UPLOADER).val('');\n\n        // hide save/cancel buttons\n        _root.removeClass('confirm');\n\n        // unset course original image data\n        $(SELECTORS.HEADER).data('original_image', '');\n    };\n\n    /**\n     * Creates a bootstrap dismissable containing error text.\n     * Dismissable should appear in header and should cover upload button.\n     * @param {string} text Error text\n     */\n    var _createErrorPopup = function(text) {\n        // create bootstrap 4 dismissable\n        var popup = $('<div></div>');\n        popup.text(text);\n        popup.css({'position' : 'absolute'});\n        popup.css({'left' : '5px'});\n        popup.css({'bottom' : '30px'});\n        popup.addClass('alert alert-danger alert-dismissable fade show');\n\n        // create dismiss button\n        var dismissBtn = $('<button></button>');\n        dismissBtn.html('&times;');\n        dismissBtn.addClass('close');\n        dismissBtn.attr('type', 'button');\n        dismissBtn.attr('data-dismiss', 'alert');\n\n        // append dismiss button to popup\n        popup.append(dismissBtn);\n\n        // add to header's course image area\n        $(SELECTORS.HEADER_TOP).append(popup);\n    };\n\n    /**\n     * Creates a bootstrap dismissable containing success text.\n     * Dismissable should appear in header and should cover upload button.\n     * @param {string} text Success text.\n     */\n    var _createSuccessPopup = function(text) {\n        // create bootstrap 4 dismissable\n        var popup = $('<div></div>');\n        popup.text(text);\n        popup.prop('id','cimage_success_popup');\n        popup.css({'position' : 'absolute'});\n        popup.css({'left' : '5px'});\n        popup.css({'bottom' : '30px'});\n        popup.addClass('alert alert-success alert-dismissable fade show');\n\n        // create dismiss button\n        var dismissBtn = $('<button></button>');\n        dismissBtn.html('&times;');\n        dismissBtn.addClass('close');\n        dismissBtn.attr('type', 'button');\n        dismissBtn.attr('data-dismiss', 'alert');\n\n        // append dismiss button to popup\n        popup.append(dismissBtn);\n\n        // add to header's course image area\n        $(SELECTORS.HEADER_TOP).append(popup);\n\n        // makes the alert disapear after a set amout of time.\n        setTimeout(function() {\n            $('#cimage_success_popup').fadeTo(500, 0).slideUp(500, function(){\n                 $(this).remove();\n            });\n        },1800);\n    };\n\n    /**\n     * Taken from theme_snap.\n     * Get human file size from bytes.\n     * https://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable.\n     * @param {int} size\n     * @returns {string}\n     */\n    var _humanFileSize = function(size) {\n        var i = Math.floor(Math.log(size) / Math.log(1024));\n        return (size / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + ['B', 'KB', 'MB', 'GB', 'TB'][i];\n    };\n\n    /**\n     * Entry point to module. Sets globals and registers event listeners.\n     * @param {String} root Jquery selector for container.\n     * @return void\n     */\n    var init = function(root, maxbytes, courseid) {\n        _setGlobals(root, maxbytes, courseid);\n        _registerEventListeners();\n    };\n\n    return {\n        init: init\n    };\n});"],"names":["define","$","ajax","notification","str","ModalFactory","ModalEvents","_root","_maxbytes","_courseid","_imagedata","_imagename","SELECTORS","_setImageData","imagedata","_setImageName","imagename","_handleImageChange","event","target","files","length","file","type","match","size","get_string","_humanFileSize","done","_createErrorPopup","name","reader","FileReader","onload","_confirmImageUpload","readAsDataURL","result","styleselect","data","css","addClass","split","_uploadImage","ajaxCall","methodname","args","courseid","_uploadDone","fail","exception","call","removeClass","val","_createSuccessPopup","_cancelUpload","original_img","text","popup","position","left","bottom","dismissBtn","html","attr","append","prop","setTimeout","fadeTo","slideUp","this","remove","i","Math","floor","log","pow","toFixed","init","root","maxbytes","_setGlobals","on"],"mappings":"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"}