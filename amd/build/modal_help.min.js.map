{"version":3,"file":"modal_help.min.js","sources":["../src/modal_help.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Campus - ModalHelp class\n *\n * @package    theme_urcourses_default\n * @author     John Lane\n *\n */\n\nimport $ from 'jquery';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport CustomEvents from 'core/custom_interaction_events';\nimport KeyCodes from 'core/key_codes';\nimport Modal from 'core/modal';\nimport ModalEvents from 'core/modal_events';\nimport ModalRegistry from 'core/modal_registry';\nimport ModalHelpAjax from 'theme_urcourses_default/modal_help_ajax';\nimport FuzzySearch from 'theme_urcourses_default/fuzzysearch';\n\nconst SELECTORS = {\n    SEARCH: '#modal_help_search',\n    SEARCH_BUTTON: '#modal_help_search_btn',\n    SEARCH_CLEAR: '#modal_help_search_clear',\n    SUGGESTIONS: '#modal_help_search_suggestions',\n    SUGGESTION_ITEM: '.modal-help-suggestion-item',\n    SEARCH_RESULT: '.modal-help-search-result',\n    BREADCRUMBS: '#breadcrumbs',\n    BREADCRUMB: '.breadcrumb-item a',\n    BREADCRUMB_SEARCH: '#breadcrumb_search',\n    BREADCRUMB_HOME: '#breadcrumb_home',\n    BREADCRUMB_PAGE: '#breadcrumb_page',\n    GUIDE_PAGE_LINK: '[data-region=\"guide-page-content\"] a',\n    OVERLAY_LOADING: '.overlay-icon-container',\n    BACK: '[data-action=\"go-back\"]',\n    BACK_TO_TOP: '#modal-help-back-to-top',\n    MAIN: '[data-region=\"modal-help-main\"]'\n};\n\nconst TEMPLATES = {\n    MODAL_HELP_GUIDE_PAGE: 'theme_urcourses_default/modal_help_guide_page',\n    MODAL_HELP_SEARCH_RESULTS: 'theme_urcourses_default/modal_help_search_results',\n    MODAL_HELP_LINKS_PAGE: 'theme_urcourses_default/modal_help_links',\n    OVERLAY_LOADING: 'core/overlay_loading'\n};\n\n/**\n * UR Courses help modal.\n *\n * @class ModalHelp\n * @property {Number} contextId Context ID number.\n * @property {Array} topicList Array of help topics.\n * @property {Array} topicTitles Titles of help topics.\n * @property {Object} searchBox Search input.\n * @property {Object} searchButton Search submit.\n * @property {Object} searchClear Clears search value.\n * @property {Object} suggestionBox Predictive search suggestion list.\n * @property {Object} suggestionItemIndex suggestionBox item index.\n */\nexport default class ModalHelp extends Modal {\n\n    constructor(root) {\n        super(root);\n        this.contextId = null;\n        this.topicList = null;\n        this.topicTitles = null;\n        this.searchBox = this.modal.find(SELECTORS.SEARCH);\n        this.searchButton = this.modal.find(SELECTORS.SEARCH_BUTTON);\n        this.searchClear = this.modal.find(SELECTORS.SEARCH_CLEAR);\n        this.suggestionBox = this.modal.find(SELECTORS.SUGGESTIONS);\n        this.content = this.modal.find(SELECTORS.MAIN);\n        this.suggestionItemIndex = 0;\n        this.currentPath = '';\n        this.history = [];\n        this.landingPageUrl = '';\n        this.userIsInstructor = null;\n    }\n\n    /**\n     * Setup for topic list, home page, and events.\n     *\n     * @param {Number} contextId Context ID number.\n     * @param {String} localUrl The local path relative to the site root.\n     */\n    async init(contextId, localUrl) {\n        try {\n            this.contextId = contextId;\n            [this.topicList, this.landingPageUrl, this.userIsInstructor] = await Promise.all([\n                this.getTopicList(),\n                ModalHelpAjax.getLandingPageUrl(this.contextId, localUrl),\n                ModalHelpAjax.userIsInstructor()\n            ]);\n            this.topicTitles = this.topicList.map(topic => topic.title);\n            FuzzySearch.setDictionary(this.topicTitles);\n            this.initEvents();\n        } catch (error) {\n            Notification.exception(error);\n        }\n    }\n\n    /**\n     * Registers event listeners.\n     */\n    initEvents() {\n\n        // PREDICTIVE SEARCH EVENTS //\n\n        /** Update suggestion list based on input. */\n        this.searchBox.on('input', () => {\n            if (this.searchBox.val()) {\n                this.showSearchClear();\n            } else {\n                this.hideSearchClear();\n            }\n            this.updateSuggestions();\n        });\n\n        /** Show suggestion list when search box is in focus. */\n        this.searchBox.on('focus', () => {\n            this.updateSuggestions();\n        });\n\n        /** Clear search value if search clear button is clicked. */\n        this.searchClear.on('click', () => {\n            this.clearSearch();\n        });\n\n        /** Hide suggestions if user clicks away from search box. */\n        this.getRoot().on('click', (e) => {\n            if (e.target !== this.searchBox[0] && e.target !== this.suggestionBox[0]) {\n                this.hideSuggestionBox();\n            }\n        });\n\n        /** If user presses up or down while focused on search, focus on suggestions. */\n        this.searchBox.on('keydown', (e) => {\n            if (e.keyCode === KeyCodes.arrowUp || e.keyCode === KeyCodes.arrowLeft) {\n                e.preventDefault();\n                this.suggestionItemIndex = this.getSuggestionItems().length - 0;\n                this.getSuggestionItems().eq(this.suggestionItemIndex).focus();\n            }\n            else if (e.keyCode === KeyCodes.arrowDown || e.keyCode === KeyCodes.arrowRight) {\n                e.preventDefault();\n                this.suggestionItemIndex = -1;\n                this.getSuggestionItems().eq(this.suggestionItemIndex).focus();\n            }\n        });\n\n        /** If user is focused on suggestions, cycle through list. */\n        this.suggestionBox.on('keydown', SELECTORS.SUGGESTION_ITEM, (e) => {\n            if (e.keyCode === KeyCodes.arrowUp || e.keyCode === KeyCodes.arrowLeft) {\n                e.preventDefault();\n                this.suggestionItemIndex--;\n                if (this.suggestionItemIndex < -1) {\n                    this.suggestionItemIndex = this.getSuggestionItems().length - 0;\n                }\n                this.getSuggestionItems().eq(this.suggestionItemIndex).focus();\n            }\n            else if (e.keyCode === KeyCodes.arrowDown || e.keyCode === KeyCodes.arrowRight) {\n                e.preventDefault();\n                this.suggestionItemIndex++;\n                if (this.suggestionItemIndex >= this.getSuggestionItems().length) {\n                    this.suggestionItemIndex = -1;\n                }\n                this.getSuggestionItems().eq(this.suggestionItemIndex).focus();\n            }\n        });\n\n        // GUIDE PAGE EVENTS //\n\n        /** Show home page when modal is open. */\n        this.getRoot().on(ModalEvents.shown, () => {\n            this.renderGuidePage(this.landingPageUrl.url, this.landingPageUrl.target);\n        });\n\n        /** Reset modal to default when closed. */\n        this.getRoot().on(ModalEvents.hidden, () => {\n            this.resetModal();\n        });\n\n        /** Open suggestion page if user clicks or presses enter. */\n        this.suggestionBox.on(CustomEvents.events.activate, SELECTORS.SUGGESTION_ITEM, (e) => {\n            const suggestion = $(e.target);\n            const topicTitle = suggestion.attr('data-value');\n            const topicTitleLower = topicTitle.toLowerCase().replace(/&/g, '&amp;');\n            const topic = this.topicList.find(topic => topic.title.toLowerCase() === topicTitleLower);\n            const url = `${topic.url}.json`;\n            this.searchBox.val(topicTitle);\n            this.showSearchClear();\n            this.renderGuidePage(url);\n        });\n\n        /** Search on click. */\n        this.searchButton.on('click', () => {\n            const query = this.searchBox.val();\n            this.searchGuides(query);\n            this.hideSuggestionBox();\n        });\n\n        /** Search on enter. */\n        this.searchBox.on('keydown', (e) => {\n            if (e.keyCode === KeyCodes.enter) {\n                const query = this.searchBox.val();\n                this.searchGuides(query);\n                this.getModal().focus();\n                this.hideSuggestionBox();\n            }\n        });\n\n        /** Open search result. */\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SEARCH_RESULT, (e) => {\n            const url = $(e.target).attr('data-url');\n            this.renderGuidePage(`${url}.json`);\n        });\n\n        /** If the user clicks a link inside the guide page, open the page. */\n        this.getRoot().on('click', SELECTORS.GUIDE_PAGE_LINK, (e) => {\n            let href = $(e.currentTarget).attr('href');\n            if (href.startsWith('#') ) {return;}\n            if (href.endsWith('/')) {href = href.substring(0, href.lastIndexOf('/'));}\n            e.preventDefault();\n            if (href.startsWith('http') || href.startsWith('https') || href.startsWith('mailto')) {\n                window.open(href, '_blank');\n            } else {\n                const [path, target] = href.split('#');\n                const hrefPath = path.split('/');\n                const actualPath = this.currentPath.split('/');\n                for (const node of hrefPath) {\n                    if (node === '..'){ actualPath.pop();}\n                    else if (node !== '.') {actualPath.push(node);}\n                }\n                const url = actualPath.join('/');\n                this.renderGuidePage(`${url}.json`, target);\n            }\n        });\n\n        this.getModal().on('click', SELECTORS.BREADCRUMB, (e) => {\n            e.preventDefault();\n            const breadcrumb = $(e.currentTarget);\n            const url = breadcrumb.attr('href');\n            const target = breadcrumb.attr('data-target');\n            this.renderGuidePage(url, target);\n        });\n\n        this.getModal().on('click', SELECTORS.BACK, (e) => {\n            e.preventDefault();\n            if (this.history.length > 1) {\n                this.history.pop();\n                const [url, target] = this.history.pop();\n                this.renderGuidePage(url, target);\n            }\n        });\n\n        $(this.getModal()).find(\".modal-body\").scroll(function () {\n            if ($(this).scrollTop() > 50) {\n                $(SELECTORS.BACK_TO_TOP).fadeIn();\n            } else {\n                $(SELECTORS.BACK_TO_TOP).fadeOut();\n            }\n        });\n\n        this.getModal().on('click', SELECTORS.BACK_TO_TOP, (e) => {\n             $(this.getModal()).find(\".modal-body\").animate({\n                        scrollTop: 0\n                }, 400);\n                    return false;\n        });\n    }\n    /**\n     * Get list of help topics.\n     * @return {Array} Array of topics.\n     */\n    async getTopicList() {\n        const {instructor, url} = await ModalHelpAjax.getTopicListUrl(this.contextId);\n        const topicListJson = await this.getJsonData(url);\n        const topics = topicListJson.jsondata.page_data[0].all_pages;\n        const topicsSorted = topics.sort((a, b) => a.title > b.title);\n        const prefix = instructor ? 'Instructor' : 'Students';\n        return topicsSorted.filter(topic => topic.prefix === prefix);\n    }\n\n    /**\n     * Updates the suggestion list based on whatever is in the search box.\n     */\n    updateSuggestions() {\n        const query = this.searchBox.val();\n        let suggestions = FuzzySearch.search(query);\n        if (!suggestions.length) {\n            suggestions = this.topicTitles;\n        }\n        const suggestionList = this.getSuggestions(suggestions);\n        this.suggestionBox.html('');\n        this.suggestionBox.append(suggestionList);\n        this.showSuggestionBox();\n    }\n\n    /**\n     * Returns html markup based on list of suggested words.\n     * @param {Array} suggestions - List of suggested words.\n     * @returns {Array} An array of html tags.\n     */\n    getSuggestions(suggestions) {\n        return suggestions.map(suggestion => `<a href=\"#\" class=\"modal-help-suggestion-item\"\n                                              data-value=\"${suggestion}\">${suggestion}</a>`);\n    }\n\n    /**\n     * Searches the guides and displays results.\n     * @param {String} query\n     */\n    async searchGuides(query) {\n        if (!query) {return;}\n        try {\n            await this.setLoading(true);\n            const searchUrl = await ModalHelpAjax.getSearchUrl(this.contextId, query);\n            const basePath = searchUrl.split('/');\n            basePath.pop();\n            basePath.pop();\n            const baseUrl = basePath.join('/');\n            const searchResults = await this.getJsonData(searchUrl);\n            const breadcrumbs = [\n                {\n                    active: false,\n                    name: this.userIsInstructor ? 'Instructor Guide' : 'Student Guides',\n                    url: this.userIsInstructor ? `${baseUrl}/instructor.json` : `${baseUrl}/student.json`,\n                    target: ''\n                },\n                {\n                    active: true,\n                    name: `Search Results: ${query}`,\n                    url: '',\n                    target: '',\n                }\n            ];\n            await this.renderReplace(TEMPLATES.MODAL_HELP_SEARCH_RESULTS,\n                {results: searchResults.jsondata,\n                    query: query,\n                    breadcrumbs: breadcrumbs}, this.content);\n            this.getBody()[0].scrollTop = 0;\n\n            this.history.push([searchUrl]);\n        } catch (error) {\n            Notification.exception(error);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n\n    /**\n     * Load content from the url into the modal. Scroll to target if one is provided.\n     * @param {String} url Url to fetch from.\n     * @param {String} target Anchor to scroll to when url is loaded.\n     */\n    async renderGuidePage(url, target = '') {\n        try {\n            await this.setLoading(true);\n            const page = await this.getJsonData(url);\n            const breadcrumbs = [];\n            const {content, frontmatter, jsondata} = page;\n            const {title} = frontmatter ? frontmatter : jsondata.page_data[0];\n            const path = url.split('/');\n\n            breadcrumbs.unshift({\n                active: true,\n                name: title,\n                target: target,\n                url: url,\n            });\n            path.pop();\n            while (path[path.length - 1] !== 'guides') {\n                const breadcrumbUrl = `${path.join('/')}.json`;\n                const breadcrumbPage = await this.getJsonData(breadcrumbUrl);\n                const {frontmatter, jsondata} = breadcrumbPage;\n                const {title} = frontmatter ? frontmatter : jsondata.page_data[0];\n                breadcrumbs.unshift({\n                    active: false,\n                    name: title,\n                    url: breadcrumbUrl\n                });\n                path.pop();\n            }\n\n            const guidesBase = path.join('/');\n\n            if (this.userIsInstructor && breadcrumbs[0].name !== 'Instructor Guide') {\n                breadcrumbs.unshift({\n                    active: false,\n                    name: 'Instructor Guide',\n                    url: `${guidesBase}/instructor.json`\n                });\n            }\n            if (!this.userIsInstructor && breadcrumbs[0].name !== 'Student Guides') {\n                breadcrumbs.unshift({\n                    active: false,\n                    name: 'Student Guides',\n                    url: `${guidesBase}/student.json`\n                });\n            }\n\n            let html = content ? content : jsondata.page_data[0].content;\n            html = html.replaceAll('src=\"assets', `src=\"${guidesBase}/assets`);\n            html = html.replaceAll('src=\"../assets', `src=\"${guidesBase}/assets`);\n            html = html.replaceAll('src=\"./images', `src=\"${guidesBase}/images`);\n            var back =false;\n            if (this.history.length > 0) {\n                back =true;\n            }\n\n            if(!$(this.header).find(\".modal-help-links\").length){\n                await this.renderAppend(TEMPLATES.MODAL_HELP_LINKS_PAGE,\n                    {isinstructor:this.userIsInstructor},\n                    $(this.header).find(\".modal-help-header\"));\n            }\n            await this.renderReplace(TEMPLATES.MODAL_HELP_GUIDE_PAGE,\n                {html: html,\n                breadcrumbs: breadcrumbs,\n                isinstructor:this.userIsInstructor,\n                back:back}, this.content);\n            this.currentPath = url.substring(0, url.lastIndexOf('/'));\n            if (target) {\n                const anchor = target.startsWith('#') ? $(target) : $(`#${target}`);\n                if (anchor.length){ anchor[0].scrollIntoView();}\n            }else {this.getBody()[0].scrollTop = 0;}\n\n            this.history.push([url, target]);\n        } catch (error) {\n            Notification.exception(error);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n\n    /**\n     * Fetches from url and returns json.\n     * @param {String} url Url to fetch from.\n     */\n    async getJsonData(url) {\n        const response = await fetch(url);\n        return response.json();\n    }\n\n    /**\n     * Appends a loading spinner to modal if loading is true, removes spinner if false.\n     * @param {Boolean} loading True for loading, contentfalse for not-loading.\n     */\n    setLoading(loading) {\n        if (loading) {\n            return this.renderAppend(TEMPLATES.OVERLAY_LOADING, {visible: true}, this.content);\n        } else {\n            this.getBody().find(SELECTORS.OVERLAY_LOADING).remove();\n        }\n    }\n\n    /**\n     * Render template using data and replace area.\n     * @param {String} template Template to render.\n     * @param {Object} data Template data.\n     * @param {Object|String} area Selector or jquery object.\n     */\n    renderReplace(template, data, area) {\n        return Templates.render(template, data)\n            .then((html, js) => Templates.replaceNodeContents(area, html, js));\n    }\n\n    /**\n     * Render template using data and append to area.\n     * @param {String} template Template to render.\n     * @param {Object} data Template data.\n     * @param {Object|String} area Selector or jquery object.\n     */\n    renderAppend(template, data, area) {\n        return Templates.render(template, data)\n            .then((html, js) => Templates.appendNodeContents(area, html, js));\n    }\n\n    /**\n     * Resets modal content and search.\n     */\n    resetModal() {\n        this.content.html('');\n        this.searchBox.val('');\n        this.suggestionBox.html('');\n    }\n\n    /**\n     * Clears whatever is in the search box.\n     */\n    clearSearch() {\n        this.searchBox.val('');\n        this.hideSearchClear();\n    }\n\n    /**\n     * Removes d-none class from suggestion box and scrolls to the top of the list.\n     */\n    showSuggestionBox() {\n        this.suggestionBox.removeClass('d-none');\n        this.suggestionBox[0].scrollTop = 0;\n    }\n\n    /**\n     * Adds d-none class to suggestion box.\n     */\n    hideSuggestionBox() {\n        this.suggestionBox.addClass('d-none');\n    }\n\n    /**\n     * Removes d-none class from clear search button.\n     */\n    showSearchClear() {\n        this.searchClear.removeClass('d-none');\n    }\n\n    /**\n     * Adds d-none class to clear search button.\n     */\n    hideSearchClear() {\n        this.searchClear.addClass('d-none');\n    }\n\n    /**\n     * Returns an array of suggestions in the suggestion box.\n     * @returns {JQuery}\n     */\n    getSuggestionItems() {\n        return this.suggestionBox.find(SELECTORS.SUGGESTION_ITEM);\n    }\n\n    /**\n     * Returns modal type. Used when creating the modal using ModalFactory.\n     * @returns {String}\n     */\n    static getType() {\n        return 'theme_urcourses_default-help';\n    }\n}\n\n// Setup code for adding ModalHelp to the modal factory.\nlet registered = false;\nif (!registered) {\n    ModalRegistry.register(ModalHelp.getType(), ModalHelp, 'theme_urcourses_default/modal_help');\n    registered = true;\n}\n\n"],"names":["SELECTORS","TEMPLATES","ModalHelp","root","contextId","topicList","topicTitles","searchBox","_this","modal","find","searchButton","searchClear","suggestionBox","content","suggestionItemIndex","currentPath","history","landingPageUrl","userIsInstructor","localUrl","Promise","all","this","getTopicList","ModalHelpAjax","getLandingPageUrl","map","topic","title","setDictionary","initEvents","exception","on","_this2","val","showSearchClear","hideSearchClear","updateSuggestions","clearSearch","getRoot","e","target","hideSuggestionBox","keyCode","KeyCodes","arrowUp","arrowLeft","preventDefault","getSuggestionItems","length","eq","focus","arrowDown","arrowRight","ModalEvents","shown","renderGuidePage","url","hidden","resetModal","CustomEvents","events","activate","topicTitle","attr","topicTitleLower","toLowerCase","replace","query","searchGuides","enter","getModal","href","currentTarget","startsWith","endsWith","substring","lastIndexOf","window","open","split","path","hrefPath","actualPath","node","pop","push","join","breadcrumb","scroll","scrollTop","fadeIn","fadeOut","animate","getTopicListUrl","instructor","getJsonData","topicListJson","topics","jsondata","page_data","all_pages","topicsSorted","sort","a","b","prefix","filter","suggestions","FuzzySearch","search","suggestionList","getSuggestions","html","append","showSuggestionBox","suggestion","setLoading","getSearchUrl","searchUrl","basePath","baseUrl","searchResults","breadcrumbs","active","name","renderReplace","results","getBody","page","frontmatter","unshift","breadcrumbUrl","breadcrumbPage","guidesBase","replaceAll","back","header","renderAppend","isinstructor","anchor","scrollIntoView","fetch","response","json","loading","visible","remove","template","data","area","Templates","render","then","js","replaceNodeContents","appendNodeContents","removeClass","addClass","Modal","registered","register","getType"],"mappings":"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"}